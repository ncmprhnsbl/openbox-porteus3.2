#!/bin/bash

## A script to show users ifnormation about their system and Porteus
## Author: brokenman <brokenman@porteus.org>

## This script is released under the copyleft license. You may do with it
## whatever you wish, as long as no animals are harmed.

. /usr/lib/librokenman
exec 2>/dev/null

if [ $DISPLAY ]; then
	if [ $EUID -ne 0 ]; then
		/opt/porteus-scripts/xorg/psu $0 &
		exit
	fi
		else
	echo
	echo "This program requires an X session!"
	echo
	exit
fi

## Variables
export tmpsi=/tmp/psinfo$$
export info=$tmpsi/info.tmp
export mdir=`ls -l /mnt/live/porteus/modules|awk '{print$NF}'|sed 's@/mnt/live@@g'`
[ "$mdir" ] && export pdir=${mdir%/*}

## Initial setup
[ -d $tmpsi ] && rm -rf $tmpsi
mkdir $tmpsi

## Opening page info
cat > $info << EOF

---=== PORTEUS SYSTEM INFORMATION TOOL ===---

This is a comprehensive system information sniffer that can 
provide useful information for troube shooting, or when 
requested to provide information on our forums. Select an 
option from the menu on the left, and the information for 
the chosen item will replace this text.
EOF

## Functions

insert_header(){
echo "$1" > $info
echo "" >> $info
}; export -f insert_header

craction(){
echo '<action signal="cursor_changed">get_info '$1'</action>
	<action signal="cursor_changed">refresh:'$2'</action>
	<action signal="cursor_changed">enable:btnOpen</action>
	<action signal="cursor_changed">enable:btnDump</action>'
}; export -f craction

gtk_upload_report(){
export UP_REPORT='
'`start_window "Upload file" info 500 250`'
<hbox>
'`pixmapfile 36 36 /usr/share/pixmaps/porteus/network.png`'
'`txtcolor 440 darkred x-large normal "  Upload your log file to pastebin for analysis."`'
</hbox>
'`hsep`'
<frame>
'`txtmarkup 450 "Would you like to upload your report to pastebin? This can be useful for people wanting an analysis by Team Porteus for trouble shooting a problem. After the upload you should then post a link to the pastebin file in our forums."`'
</frame>
<hbox>
  '`butno`'
  '`butyes`'
</hbox>
'`end_window`'
'
gtkdialog -p UP_REPORT > $tmpsi/upload.tmp
}; export -f gtk_upload_report

get_info(){
echo $1
case $1 in
Kernel )
insert_header "CURRENT KERNEL: `uname -r`"
#echo "CURRENT KERNEL: `uname -r`" > $info
#echo "" >> $info
echo "KERNEL MODULES LOADED:" >> $info
lsmod|awk '{print$1}' >> $info
;;
Processor )
egrep "vendor|name|cores|flags|MHz|address|cpuid" /proc/cpuinfo|sort -u > $info
dmidecode -t 4|egrep "Family|ACPI|APIC|PGE|threading|Thermal|Speed|Clock|Thread|capable" >> $info
sed -i 's/^[ \t]*//' $info
;;
Bios )
insert_header "BIOS INFO:"
dmidecode -t 0|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d' >> $info
;;
Motherboard )
insert_header "MOTHERBOARD:"
dmidecode -t 1 | grep "Manufacturer\|Product Name\|Serial Number" | tr -d "\t" | sed "s/Manufacturer//" >> $info 
;;
Memory )
dmidecode -t 16|egrep "Capacity|Devices|Correction|Use:"|sed 's/^[ \t]*//' > $info
cat /proc/meminfo >> $info
;;
Screen )
insert_header "SCREEN INFO:"
xrandr >> $info
;;
Graphics )
insert_header "GRAPHICS:"
for I in `lspci |awk '/VGA/{print $1}'`;do lspci -v -s $I >> $info;done
;;
Sound )
insert_header "SOUND CARDS:"
grep ":" /proc/asound/cards|awk -F: '{print$NF}' >> $info
lspci|grep Audio|awk -F: '{print$NF}' >> $info
echo "" >> $info
aplay -l >> $info
;;
Optical )
insert_header "CD/DVD DEVICE"
pres=`ls -l /dev/cdrom|awk '{print$NF}'`
if [ "$pres" ]; then
cat /proc/sys/dev/cdrom/info|egrep "name:|speed:|slots:"|sed '/change/d' >> $info
cdrecord -prcap dev=/dev/cdrom|egrep "Device type|Vendor_info|Identifikation|Revision" >> $info
#cat $PSC_TMP/.cd >> $info
echo "" >> $info
echo "PROFILE: " >> $info
cdrecord -prcap dev=/dev/cdrom|grep Profile >> $info
#cat $PSC_TMP/.cd >> $info
echo "" >> $info
echo "CAPABILITIES:" >> $info
cdrecord -prcap dev=/dev/cdrom|egrep "Does|Write|Feature"|sort -u >> $info
	else
echo "No optical device found at /dev/cdrom" > $info
fi
;;
Webcam )
insert_header "WEBCAM INFO:"
if [[ `lsusb|grep ebcam` ]]; then
lsusb|grep ebcam >> $info
dmesg|grep ebcam >> $info
	else
echo "" >> $info
echo "No webcam found." >> $info
fi
;;
Drives )
insert_header "DRIVE INFO:"
for a in `df|sed -e '/aufs/d' -e '/Used/d'|awk '{print$1}'|tr -d [:digit:]|sort -u`; do
  b=`echo $a|sed 's@/dev/@@g'`
  if [ `cat /sys/block/$b/removable` -eq 0 ]; then
    hdparm -I $a >> $info
  fi
done
;;
Usb_devices )
insert_header "USB DEVICES:"
lsusb -t >> $info
;;
Usb )
insert_header "USB INFO:"
base=`ls -l /sys/block/|awk '{print$9}'|grep .d.`
for a in $base; do
  if [ `cat /sys/block/$a/removable` -eq 1 ]; then
    echo "$a is removable" >> $info
    [ ! `mount|grep $a` ] && mt=no || mt=yes
    echo "MOUNTED: $mt" >> $info
    echo "NAME: `cat /sys/block/$a/device/model`" >> $info
    echo "VENDOR: `cat /sys/block/$a/device/vendor`" >> $info
    echo "STATE: `cat /sys/block/$a/device/state`" >> $info
    echo "SIZE: `df -h /dev/$a|tail -n1|awk '{print$2}'`" >> $info
  fi
done
;;
Partitions )
insert_header "PARTITION INFO:"
df -Th|sed '/aufs/d' >> $info
echo "" >> $info
echo "LABEL/UUID INFO:" >> $info
for a in `df|sed -e '/Used/d' -e '/aufs/d'|awk '{print$1}'`; do
blkid|grep $a
done >> $info
;;
Battery )
insert_header "BATTERY INFO:"
dmidecode -t 22|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d' >> $info
;;
Chassis )
insert_header "CHASSIS INFO:"
dmidecode -t 3|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d' >> $info
;;
System )
insert_header "SYSTEM INFO:"
dmidecode -t 1|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d'  >> $info
;;
Ethernet )
insert_header "ETHERNET INFO:"
for I in `lspci |awk '/Ethernet/{print $1}'`;do lspci -v -s $I >> $info;done
;;
Wireless )
insert_header "WIRELESS INFO:"
for I in `lspci |awk '/Wireless/{print $1}'`;do lspci -v -s $I >> $info;done
;;
Mac )
insert_header "MAC ADDRESS INFO:"
for dev in wlan eth; do
  dev=`ifconfig|grep -A3 $dev[0-9]|head -n1|awk '{print$1}'`
  mac=`ifconfig $dev|grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'`
  echo "$dev $mac" >> $info
done
;;
IP )
insert_header "IP INFO:"
ifconfig|egrep -A7 'eth[0-9]|wlan[0-9]'|grep inet|sed 's/^[ \t]*//' >> $info
;;
Nameserver )
insert_header "NAMESERVER INFO:"
ns=`cat /etc/resolv.conf|sed '/#/d'`
if [ "$ns" ]; then
	echo $ns >> $info
		else
	echo "No nameserver found." >> $info
fi
;;
Routing )
insert_header "ROUTING INFO:"
route -ne >> $info
;;
Dmesg )
insert_header "DMESG INFO:"
dmesg >> $info
;;
Messages )
insert_header "/var/log/message INFO:"
cat /var/log/messages >> $info
;;
Xorg )
insert_header "XORG INFO:"
xlog=`cat /var/log/Xorg.0.log`
if [ "$xlog" ]; then
  cat /var/log/Xorg.0.log >> $info
else
  echo "No xorg log found." >> $info
fi
;;
Xsession )
insert_header "XSESSION ERRORS:"
[ -f /root/.xsession-errors ] && echo "USER: root" >> $info && cat /root/.xsession-errors >> $info
for a in `grep -v "\!" /etc/shadow|cut -d':' -f1|sed 'root/d'`; do
  [ -f /home/$a/.xsession-errors ] && echo "USER: $a" >> $info && cat /home/$a/.xsession-errors >> $info
done
;;
Syslog )
insert_header "SYSLOG:"
vl=/var/log
[ -f $vl/syslog ] && cat $vl/syslog >> $info || echo "No syslog found." >> $info
;;
Version )
insert_header "VERSION:"
cat /etc/porteus-version >> $info
echo "Kernel: `uname -r`" >> $info
;;
Modules )
insert_header "LOADED MODULES:"
ls -1 /mnt/live/memory/images >> $info
;;
Packages )
insert_header "LOADED PACKAGES:"
ls -1 /var/log/packages >> $info
;;
Boot_info )
insert_header "BOOT INFO:"
cat /var/log/porteus-livedbg >> $info
;;
Bootdisk )
insert_header "BOOT DISK:"
if [ "$pdir" ]; then
  echo "You booted from: $pdir" >> $info
else
  echo "You booted from: unknown" >> $info
fi
;;
Rootcopy )
insert_header "ROOTCOPY FILES:"
if [ "$pdir" ]; then
  rcpy=`find $pdir/rootcopy -name "*"`
  if [ "$rcpy" ]; then
    find $pdir/rootcopy -name "*" >> $info
      else
    echo "No rootcopy files present." >> $info
  fi
    else
  echo "Rootcopy folder not found." >> $info
fi
;;
lspci )
insert_header "lspci output:"
lspci -knn >> $info
;;
lsmod )
insert_header "lsmod output:"
lsmod >> $info
;;
Users )
insert_header "USER INFO:"
grep -v "\!" /etc/shadow|cut -d':' -f1 >> $info
;;
Lastboot )
insert_header "LAST BOOT:"
who -b|sed 's/^[ \t]*//' >> $info
echo "Uptime (hr:min) : `uptime|awk '{print$3}'|sed 's/,//g'`" >> $info
esac
}; export -f get_info

export PORTEUS_INFO='
'`start_window "Porteus system info" hwinfo 600 460`'
<hbox>
'`pixmapfile 36 36 /usr/share/pixmaps/porteus/porteus128.png`'
'`txtcolor 500 darkred x-large normal "  Welcome to the Porteus system information page"`'
</hbox>
'`hsep`'
<notebook show-tabs="true" show-border="false" labels="Machine|Media|Drives|Network|Logs|Porteus|Misc" height-request="350">
<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>machine</variable>
			<width>130</width>
			<height>300</height>
			<item>Kernel</item>
			<item>System</item>
			<item>Processor</item>
			<item>Motherboard</item>
			<item>Battery</item>
			<item>Bios</item>
			<item>Memory</item>
			<item>Screen</item>
			<item>Chassis</item>
			'`craction '\$machine' machinfo`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>

<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>graphics</variable>
			<width>130</width>
			<height>300</height>
			<item>Graphics card</item>
			<item>Sound card</item>
			<item>Optical drive</item>
			<item>Webcam</item>
			<item>Usb_devices</item>
			'`craction '\$graphics' machinfo2`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo2</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>

<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>drives</variable>
			<width>130</width>
			<height>300</height>
			<item>Drives</item>
			<item>Usb</item>
			<item>Partitions</item>
			'`craction '\$drives' machinfo3`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo3</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>

<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>network</variable>
			<width>130</width>
			<height>300</height>
			<item>Ethernet</item>
			<item>Wireless</item>
			<item>Mac address</item>
			<item>IP address</item>
			<item>Nameserver</item>
			<item>Routing</item>
			'`craction '\$network' machinfo4`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo4</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>

<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>logs</variable>
			<width>130</width>
			<height>300</height>
			<item>Dmesg</item>
			<item>Messages</item>
			<item>Xorg</item>
			<item>Xsession</item>
			<item>Syslog</item>
			<item>Lastboot</item>
			'`craction '\$logs' machinfo5`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo5</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>

<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>porteus</variable>
			<width>130</width>
			<height>300</height>
			<item>Users</item>
			<item>Version</item>
			<item>Modules</item>
			<item>Packages</item>
			<item>Rootcopy</item>
			<item>Boot_info</item>
			<item>Bootdisk</item>
			'`craction '\$porteus' machinfo6`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo6</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>

<vbox>
	<hbox>
		<tree selection-mode="3" exported-column="0" rules-hint="true" headers-clickable="false">
			<label>Element</label>
			<variable>misc</variable>
			<width>130</width>
			<height>300</height>
			<item>lspci</item>
			<item>lsmod</item>
			'`craction '\$misc' machinfo7`'
		</tree>
		<edit editable="false" wrap-mode="0" left-margin="10">
			<variable>machinfo7</variable>
			<width>450</width>
			<input file>'$tmpsi'/info.tmp</input>
		</edit>
	</hbox>
</vbox>
</notebook>
<hbox>
	'`butcustom "Open current info file." "Open current file" btnOpen stock gtk-file false`'
		<action>kwrite $info || leafpad $info || beaver $info || mousepad $info || kate $info</action>
	</button>
	'`butcustom "Dump current info file to /root/psinfo.txt" "Dump current file" btnDump stock gtk-revert-to-saved false`'</button>
	'`butcustom "Dump a full system report to /root/Desktop/psinfo.txt" "Dump full report" btnReport stock gtk-go-down true`'</button>
	'`butcancel`'
</hbox>
'`end_window`'
'
gtkdialog -p PORTEUS_INFO > $tmpsi/dump

[ `egrep -o "Cancel|abort" $tmpsi/dump` ] && { rm -rf $tmpsi; exit; }

[[ `grep "Dump current file" $tmpsi/dump` ]] && gtk_upload_report

if [[ `grep "Dump full report" $tmpsi/dump` ]]; then
export STATE=MANUAL
echo "Generating full report ..." > /tmp/.message
manual_progress "Processing"
echo "PORTEUS VERSION:" > $info
cat /etc/porteus-version >> $info
echo "" >> $info
echo "KERNEL/PROCESSOR:" >> $info
echo `uname -r` `uname -m` `uname -p`>> $info
echo "" >> $info
echo "MEMORY/SWAP:" >> $info
free -m >> $info
echo "" >> $info
echo "BLOCK DEVICES:" >> $info
ls -1 /sys/block | grep -v loop | sed s/@// >> $info
echo "" >> $info
echo "PARTITIONS:" >> $info
blkid | grep -v squashfs >> $info
echo "" >> $info
echo "MOUNTED PARITIONS:" >> $info
df -Th | grep -v devtmpfs >> $info
echo "" >> $info
echo "CHEATCODES:" >> $info
cat /proc/cmdline >> $info
echo "" >> $info
echo "LIVEDBG INFO:" >> $info
cat /var/log/porteus-livedbg >> $info
echo "" >> $info
echo "SOUND CARDS:" >> $info
cat /proc/asound/cards >> $info
echo "" >> $info
echo "LSPCI OUTPUT:" >> $info
lspci -knn >> $info
echo "" >> $info
echo "LSUSB OUTPUT:" >> $info
lsusb -t >> $info
echo "" >> $info
echo "LSMOD OUTPUT:" >> $info
lsmod >> $info
echo "" >> $info
echo "BATTERY INFO:" >> $info
dmidecode -t 22|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d' >> $info
echo "" >> $info
echo "CHASSIS INFO:" >> $info
dmidecode -t 3|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d' >> $info
echo "" >> $info
echo "SYSTEM INFO:" >> $info
dmidecode -t 1|sed -e '/dmidecode/d' -e '/SMBIOS/d' -e '/Handle/d' -e '/^$/d'  >> $info
echo "" >> $info
echo "USER INFO:" >> $info
grep -v "\!" /etc/shadow|cut -d':' -f1 >> $info
echo "" >> $info
echo "LAST BOOT:" >> $info
who -b|sed 's/^[ \t]*//' >> $info
echo "Uptime (hr:min) : `uptime|awk '{print$3}'|sed 's/,//g'`" >> $info
echo "" >> $info
echo "LOADED MODULES:" >> $info
ls -1 /mnt/live/memory/images >> $info
echo "" >> $info
echo "LOADED PACKAGES:" >> $info
ls -1 /var/log/packages >> $info
echo "" >> $info
echo "/var/log/messages:" >> $info
tac /var/log/messages | sed -n '1,/kmsg started./p' | tac  >> $info
echo "" >> $info
echo "SCREEN:" >> $info
xrandr >> $info 2>/dev/null
echo "" >> $info
echo "OpenGL version:" >> $info
glxinfo | grep -i opengl >> $info
echo "" >> $info
echo "/var/log/Xorg.0.log:" >> $info
cat /var/log/Xorg.0.log >> $info 2>/dev/null
echo "" >> $info
echo "XSESSION ERRORS:" >> $info
[ -f /root/.xsession-errors ] && echo "USER: root" >> $info && tail -n300 /root/.xsession-errors >> $info
for a in `grep -v "\!" /etc/shadow|cut -d':' -f1|sed 'root/d'`; do
    [ -f /home/$a/.xsession-errors ] && echo "USER: $a" >> $info && tail -n300 /home/$a/.xsession-errors >> $info
done
kill_manual_progress
gtk_upload_report
fi

pastebin_message(){
echo '
<window window_position="1" title="Porteus message" icon-name="cdr" allow-shrink="false" width-request="'$2'">
<vbox>
 <hbox>
  <frame>
  <pixmap icon_size="6">
   <input file stock="'$3'"></input>
  </pixmap>
  </frame>
  <frame>
  <text wrap="true" selectable="true" has-focus="false"><label>"'$1'"</label></text>
  </frame>
 </hbox>
 <hbox>
  <button use-stock="true" label="gtk-ok" can-focus="true" has-focus="true"></button>
 </hbox>
</vbox>
</window>
' | gtkdialog -s
}; export -f pastebin_message

## If user chose to upload then do it, else dump to /root/desktop
if [ `egrep -o "Yes|yes" $tmpsi/upload.tmp` ]; then
  has_internet
  if [ $answ -eq 0 ]; then
  export STATE=MANUAL
  echo "Upoading now ... please wait" > /tmp/.message
  manual_progress "Pastebin"
  wgetpaste -n Porteus-user -s codepad $info > $tmpsi/link.tmp
  kill_manual_progress
  export lnk=`awk '{print$NF}' < $tmpsi/link.tmp`
  echo $lnk > /tmp/pastebin-link.txt
  pastebin_message "Your file was uploaded to $lnk (You may select and copy this text) and this address is now in the file /tmp/pastebin-link.txt." 500 gtk-yes
    else
  cp $info /root/Desktop/psinfo_report.txt
  gtk_message "No internet connection found. Your report was placed at /root/Desktop/psinfo_report.txt" 450 gtk-dialog-error
  fi
    else
  cp $info /root/Desktop/psinfo_report.txt
  gtk_message "Your file has been placed at /root/Desktop/psinfo_report.txt" 500 gtk-yes
fi
rm -rf $tmpsi
